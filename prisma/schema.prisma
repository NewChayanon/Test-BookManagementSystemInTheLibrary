// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  roleId Int  @default(2)
  Role   Role @relation(fields: [roleId], references: [id])

  email     String   @unique @db.VarChar(50)
  password  String   @db.VarChar(256)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @updatedAt @db.Timestamp(0)

  borrowing Borrowing[]
}

model Role {
  id   Int      @id @default(autoincrement())
  name RoleName @unique

  users User[]
}

enum RoleName {
  ADMIN
  USER
}

model Book {
  id         Int      @id @default(autoincrement())
  title      String
  detail     String   @db.Text
  author     String
  category   String
  pubishedAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt  DateTime @updatedAt @db.Timestamp(0)

  borrowing Borrowing[]
}

model Borrowing {
  id Int @id @default(autoincrement())

  userId Int
  User   User @relation(fields: [userId], references: [id])

  bookId Int
  Book   Book @relation(fields: [bookId], references: [id])

  borrowedAt DateTime  @default(now()) @db.Timestamp(0)
  returnedAt DateTime? @db.Timestamp(0)
}
